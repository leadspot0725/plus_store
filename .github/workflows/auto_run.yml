name: Run Keyword Collector

on:
  workflow_dispatch:  # 수동 실행 가능
  schedule:
    - cron: '0 0 * * *'  # 매일 자정에 실행 (UTC 기준)

permissions:
  id-token: write  # Workload Identity Federation을 위한 권한 설정
  contents: read   # Repository 파일 읽기 권한

jobs:
  build:
    runs-on: ubuntu-latest  # 최신 Ubuntu 환경 사용
    timeout-minutes: 30  # 최대 실행 시간 설정

    steps:
      # 1️⃣ 저장소 체크아웃 (GitHub Actions에서 코드 가져오기)
      - name: 저장소 체크아웃
        uses: actions/checkout@v4

      # 2️⃣ Python 설정 (버전 3.10 사용)
      - name: Python 3.10 설정
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'  # 의존성 캐싱 활성화

      # 3️⃣ Google Cloud 인증 (Workload Identity Federation)
      - name: Google Cloud 인증 (OIDC 사용)
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      # 4️⃣ 필수 라이브러리 설치
      - name: 필요한 Python 패키지 설치
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 5️⃣ Chrome 설치 확인 및 업데이트
      - name: Chrome 설치 확인
        run: |
          echo "🟢 현재 설치된 Chrome 버전 확인"
          google-chrome --version || echo "⚠️ Chrome이 설치되지 않음"
          
          echo "🟢 Chrome 최신 버전으로 업데이트"
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          echo "🟢 업데이트 후 Chrome 버전 확인"
          google-chrome --version

      # 6️⃣ 스크립트 실행 (연관 키워드 크롤링)
      - name: Run Python Keyword Collector
        run: python keyword_collector.py
        env:
          PYTHONUNBUFFERED: 1  # 로그 버퍼링 방지

      # 7️⃣ 실행 결과 로그 저장
      - name: 로그 아티팩트 저장
        if: always()  # 성공/실패와 관계없이 항상 실행
        uses: actions/upload-artifact@v3
        with:
          name: keyword-collector-logs
          path: |
            keyword_collector.log
            *.log

      # 8️⃣ 상태 알림 (선택 사항)
      - name: 실행 상태 알림
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 키워드 수집 작업이 성공적으로 완료되었습니다."
          else
            echo "❌ 키워드 수집 작업이 실패했습니다."
            # 여기에 Slack, 이메일 등의 알림 로직을 추가할 수 있습니다
          fi
